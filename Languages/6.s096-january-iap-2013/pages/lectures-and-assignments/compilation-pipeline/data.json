
{
  "title":"Compilation Pipeline",
  "content":" Lecture Notes Lecture 1: Compilation Pipeline (PDF - 1.0MB)\nLab Exercises The primary goal of this lab period is to get your C compiler up and running.\nWe have 2 \u0026ldquo;Hello, World!\u0026rdquo; examples for you to practice compiling to make sure that everything is working.\nLab 1 files (ZIP) (This ZIP file contains: 3 .c files and 1 .h file.)\nCompile hello1 with:\ngcc hello.c -o hello1\nCompile hello2 with:\ngcc main.c hello.c -o hello2\nAssignment 1 Setup Assignment 1 files (ZIP) (This ZIP file contains: 3 .c files and 2 .h files.)\nThe zip contains 3 C files:\nfibeverse.c fibonacci.c reverse.c And 2 header files (.h):\nfibonacci.h reverse.h You can compile them with this command (though it won\u0026rsquo;t work at first; see Problem 1):\ngcc -Wall -std=c99 _fibeverse.c reverse.c fibonacci.c_ -o **fibeverse**\nYou can run the resulting program with two arguments: a number, then a string (in quotes):\n./fibeverse 6 \u0026#39;what a trip that was!\u0026#39; 8 was! that trip a what The first line it prints is the 6th fibonacci number. The second line is the string you provided, with the words reversed.\nProblem 1 Unfortunately, the code doesn\u0026rsquo;t compile as-is! Fix the compile errors and warnings. gcc should produce no output with the above command when you are done.\nProblem 2 I can\u0026rsquo;t decide whether I want a program that computes Fibonacci numbers or a program that reverses strings! Let\u0026rsquo;s modify fibeverse so that it can be compiled into either.\nUse the preprocessor macros we taught in class to make it so that I can choose which program it is at compile time.\nWhen I compile it with this command, it should compute the Fibonacci number but not reverse the second argument:\ngcc -Wall -std=c99 **-DFIBONACCI** fibeverse.c reverse.c fibonacci.c -o **fibonacci**\nThen I can run it like this:\n./fibonacci 8\nWhen I use this command, it should reverse the string I provide as the first argument, and not do any fibonacci calculation:\ngcc -Wall -std=c99 **-DREVERSE** fibeverse.c reverse.c fibonacci.c -o **reverse**\nThen I can run it like this:\n./reverse 'a brave new world'\nIt should work as it originally did when I provide both compiler flags:\ngcc -Wall -std=c99 **-DFIBONACCI -DREVERSE** fibeverse.c reverse.c fibonacci.c -o **fibeverse**\nSolutions Assignment 1 solution (PDF)\n"}


